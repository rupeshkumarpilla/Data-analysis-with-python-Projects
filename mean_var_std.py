# -*- coding: utf-8 -*-
"""mean_var_std.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xeSxFegefFnD370y0LbP96UdPAIOmP7h
"""

import numpy as np

def calculate(list):
    # Check if list has exactly 9 elements
    if len(list) != 9:
        raise ValueError("List must contain nine numbers.")

    # Convert list to 3x3 numpy array
    arr = np.array(list).reshape(3, 3)

    # Calculate statistics
    # Axis 0: columns, Axis 1: rows, None: flattened
    calculations = {
        'mean': [
            np.mean(arr, axis=0).tolist(),  # column means
            np.mean(arr, axis=1).tolist(),  # row means
            float(np.mean(arr))             # flattened mean
        ],
        'variance': [
            np.var(arr, axis=0).tolist(),   # column variances
            np.var(arr, axis=1).tolist(),   # row variances
            float(np.var(arr))              # flattened variance
        ],
        'standard deviation': [
            np.std(arr, axis=0).tolist(),   # column std
            np.std(arr, axis=1).tolist(),   # row std
            float(np.std(arr))              # flattened std
        ],
        'max': [
            np.max(arr, axis=0).tolist(),   # column max
            np.max(arr, axis=1).tolist(),   # row max
            int(np.max(arr))                # flattened max
        ],
        'min': [
            np.min(arr, axis=0).tolist(),   # column min
            np.min(arr, axis=1).tolist(),   # row min
            int(np.min(arr))                # flattened min
        ],
        'sum': [
            np.sum(arr, axis=0).tolist(),   # column sums
            np.sum(arr, axis=1).tolist(),   # row sums
            int(np.sum(arr))                # flattened sum
        ]
    }

    return calculations